<div class="row" id="chart-list">
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
<script>
    var token = decodeURI(getQueryStringParameter('token'));
    var aggregate = getQueryStringParameter('aggregate') ? decodeURI(getQueryStringParameter('aggregate')) : 'average';
    var intervalInMinutes = 1;

    var colors = ['#05A8AA', '#B8D5B8', '#D7B49E', '#DC602E', '#BC412B'];

    var charts = {};

    var lastTimestamps = {};

    for (var name of decodeURI(getQueryStringParameter('names')).split('|')) {
        $('#chart-list').append(`<div class="col-md-6"><canvas id="chart-${name}"></canvas></div>`);
        initialize(name);
    }

    function initialize(name) {
        $.post(`/api/metrics/seriesAggregated`, {
            name,
            token,
            timestamp: 0,
            aggregate,
            intervalInMinutes,
        }, function (data) {
            initializeChart(name, data);

            if (data.length === 0) {
                return;
            }

            lastTimestamps[name] = data[data.length - 1].x + 60001;

            setInterval(function () {
                updateChart(name);
            }, 5000);
        });
    }

    function updateChart(name) {
        $.post(`/api/metrics/seriesAggregated`, {
            name,
            token,
            timestamp: lastTimestamps[name],
            aggregate,
            intervalInMinutes,
        }, function (data) {

            if (data.length === 0) {
                return;
            }

            data.forEach((x) => {
                charts[name].data.datasets[0].data.push({
                    x: new Date(x.x),
                    y: x.y,
                });

                if (charts[name].data.datasets[0].data.length >= 300) {
                    charts[name].data.datasets[0].data.splice(0, 1);
                }

            });

            charts[name].update(0);

            lastTimestamps[name] = data[data.length - 1].x + 60001;
        });
    }

    function initializeChart(name, data) {

        var ctx = document.getElementById(`chart-${name}`).getContext('2d');

        charts[name] = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [{
                    label: name,
                    data: data.map((x) => {
                        return {
                            x: new Date(x.x),
                            y: x.y,
                        };
                    }),
                    backgroundColor: 'transparent',
                    borderColor: colors[3],
                }]
            },
            options: {
                elements: {
                    point: {
                        radius: 0
                    }
                },
                scales: {
                    xAxes: [{
                        type: 'time',
                        autoSkip: true,
                        maxTicksLimit: 20,
                        time: {
                            tooltipFormat: 'HH:mm:ss',
                            displayFormats: {
                                'millisecond': 'YYYY/MM/DD HH:mm:ss',
                                'second': 'YYYY/MM/DD HH:mm:ss',
                                'minute': 'YYYY/MM/DD HH:mm',
                                'hour': 'YYYY/MM/DD HH:00',
                                'day': 'YYYY/MM/DD',
                                'month': 'YYYY/MM',
                                'year': 'YYYY/',
                            }
                        }
                    }]
                }
            }
        });
    }

    function getQueryStringParameter(field, ) {
        var href = window.location.href;
        var reg = new RegExp('[?&]' + field + '=([^&#]*)', 'i');
        var string = reg.exec(href);
        return string ? string[1] : null;
    };

</script>